{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sujungchoi/Desktop/\\uD83D\\uDC69\\u200D\\uD83D\\uDCBBCodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from '@reach/router';\nimport axios from 'axios'; // eslint-disable-next-line\n\nexport default _s(() => {\n  _s();\n\n  const [authors, setAuthors] = useState([]);\n  const [names, setNames] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8001/api/authors\") // .then(res=>setProducts(res.data.products)) if res.json({products: allProducts}) instead of getting it as an array from controller\n    .then(res => {\n      setAuthors(res.data); // how to alphabetize the value of an object in an array?\n      // setAuthors([...authors].sort())\n      // authors.sort((a, b) => a.localeCompare(b))\n      // map.sort(authors)?\n    }).catch(err => console.log(\"Error: \", err));\n  }, []);\n\n  const deleteAuthor = authorId => {\n    axios.delete('http://localhost:8001/api/authors/' + authorId).then(res => {\n      setAuthors(authors.filter(auth => auth._id !== authorId));\n    }).catch(err => console.log(\"Error: \", err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Favorite Authors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/new\",\n        children: \" Add an author! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"We have quotes by:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"firstColumn\",\n            scope: \"col\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"secondColumn\",\n            scope: \"col\",\n            children: \"Options available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: authors.map((value, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"authorName\",\n              children: value.name\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-outline-success\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/edit/${value._id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      \"color\": \"green\"\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  deleteAuthor(value._id);\n                },\n                type: \"button\",\n                className: \"btn btn-outline-warning\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}, \"s1ZkqDVowedeZPo68YUyHJVJv5s=\");","map":{"version":3,"sources":["/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Main.jsx"],"names":["React","useEffect","useState","Link","axios","authors","setAuthors","names","setNames","get","then","res","data","catch","err","console","log","deleteAuthor","authorId","delete","filter","auth","_id","map","value","idx","name","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link } from '@reach/router'\nimport axios from 'axios';\n\n// eslint-disable-next-line\nexport default () => {\n    const [ authors, setAuthors ] = useState([]);\n    const [names, setNames] = useState([]);\n\n    useEffect(()=>{\n        axios.get(\"http://localhost:8001/api/authors\")\n            // .then(res=>setProducts(res.data.products)) if res.json({products: allProducts}) instead of getting it as an array from controller\n            .then(res=>{\n                setAuthors(res.data)\n                // how to alphabetize the value of an object in an array?\n                // setAuthors([...authors].sort())\n                // authors.sort((a, b) => a.localeCompare(b))\n                // map.sort(authors)?\n\n            })  \n            .catch(err=>console.log(\"Error: \", err))     \n    }, [])\n\n    const deleteAuthor = (authorId) => {\n        axios.delete('http://localhost:8001/api/authors/' + authorId)\n            .then(res => {\n                setAuthors(authors.filter(auth => auth._id !== authorId));\n            })\n            .catch(err=>console.log(\"Error: \", err))     \n    }\n\n\n    return (\n\n        <div className=\"mainPage\">\n            <h1>Favorite Authors</h1>\n\n            <h4><Link to='/new'> Add an author! </Link></h4>\n            <h5>We have quotes by:</h5>\n\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                    <th className=\"firstColumn\" scope=\"col\">Author</th>\n                    <th className=\"secondColumn\" scope=\"col\">Options available</th>\n                    </tr>\n                </thead>\n                <tbody>\n\n                    {authors.map((value, idx)=>{\n                    return <tr key={idx}>\n                            <td className=\"authorName\" key={idx}> \n                                {value.name}\n                            </td>\n                            <td>\n                                <button type=\"button\" className=\"btn btn-outline-success\">\n                                <Link to={`/edit/${value._id}`}>\n                                <span style={{\"color\": \"green\"}}>Edit</span>\n                                </Link> \n\n                                </button>\n                                \n                                <button onClick={(e)=>{deleteAuthor(value._id)}} \n                                type=\"button\" className=\"btn btn-outline-warning\">Delete</button>\n                            </td>\n                        </tr>\n                    })}\n\n                </tbody>\n            </table>\n\n        </div>\n    )\n    }\n\n"]},"metadata":{},"sourceType":"module"}