{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sujungchoi/Desktop/\\uD83D\\uDC69\\u200D\\uD83D\\uDCBBCodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from '@reach/router';\nimport axios from 'axios'; // import AuthorForm from '../components/AuthorForm'\n// import AuthorList from '../components/AuthorList';\n// eslint-disable-next-line\n\nexport default _s(() => {\n  _s();\n\n  const [authors, setAuthors] = useState([]); // const [loaded, setLoaded] = useState(false);\n  //Create an array to store errors from the API\n  // const [errors, setErrors] = useState([]); \n\n  useEffect(() => {\n    axios.get(\"http://localhost:8001/api/authors\") // .then(res=>setProducts(res.data.products)) if res.json({products: allProducts}) instead of getting it as an array from controller\n    .then(res => {\n      setAuthors(res.data); // setLoaded(true);\n    }).catch(err => console.log(\"Error: \", err));\n  }, []); // const createAuthor = product => {\n  //     axios.post('http://localhost:8001/api/authors/new', product)\n  //         .then(res=>{\n  //             console.log(res, \"** New author created\")\n  //             //updating state after api call => re-render the page; show the new product created without having to refresh the page\n  //             setAuthors([...authors, res.data]);\n  //         })\n  //         .catch(err=>{\n  //             const errorResponse = err.response.data.errors; // Get the errors from err.response.data\n  //             const errorArr = []; \n  //             for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\n  //                 errorArr.push(errorResponse[key].message)\n  //             }\n  //             setErrors(errorArr);\n  //         })  \n  // const removeFromDom = authorId => {\n  //     setAuthors(authors.filter(auth => auth._id !== authorId));\n  //     console.log(authors.filter(auth => auth._id !== authorId));\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Favorite Authors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/new\",\n        children: \" Add an author \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"First\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Last\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: props.products.map((value, idx) => {\n              return /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"productTitle\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/${value._id}`,\n                  children: [\" \", value.title, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 21\n                }, this)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-outline-success\",\n              children: \"Success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-outline-warning\",\n              children: \"Danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Cheryl Strayed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-outline-success\",\n              children: \"Success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-outline-warning\",\n              children: \"Danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}, \"25m00636mg5p1gltH+mbOzU+1Ws=\"); // }","map":{"version":3,"sources":["/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Main.jsx"],"names":["React","useEffect","useState","Link","axios","authors","setAuthors","get","then","res","data","catch","err","console","log","props","products","map","value","idx","_id","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link } from '@reach/router'\nimport axios from 'axios';\n// import AuthorForm from '../components/AuthorForm'\n// import AuthorList from '../components/AuthorList';\n\n// eslint-disable-next-line\nexport default () => {\n    const [ authors, setAuthors ] = useState([]);\n    // const [loaded, setLoaded] = useState(false);\n    //Create an array to store errors from the API\n    // const [errors, setErrors] = useState([]); \n\n\n    useEffect(()=>{\n        axios.get(\"http://localhost:8001/api/authors\")\n            // .then(res=>setProducts(res.data.products)) if res.json({products: allProducts}) instead of getting it as an array from controller\n            .then(res=>{\n                setAuthors(res.data)\n                // setLoaded(true);\n            })  \n            .catch(err=>console.log(\"Error: \", err))     \n    }, [])\n\n    // const createAuthor = product => {\n    //     axios.post('http://localhost:8001/api/authors/new', product)\n    //         .then(res=>{\n    //             console.log(res, \"** New author created\")\n    //             //updating state after api call => re-render the page; show the new product created without having to refresh the page\n    //             setAuthors([...authors, res.data]);\n    //         })\n    //         .catch(err=>{\n    //             const errorResponse = err.response.data.errors; // Get the errors from err.response.data\n    //             const errorArr = []; \n    //             for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\n    //                 errorArr.push(errorResponse[key].message)\n    //             }\n    //             setErrors(errorArr);\n    //         })  \n\n    // const removeFromDom = authorId => {\n    //     setAuthors(authors.filter(auth => auth._id !== authorId));\n    //     console.log(authors.filter(auth => auth._id !== authorId));\n    // }\n\n    return (\n\n        <div className=\"mainPage\">\n            <h1>Favorite Authors</h1>\n\n            <h5><Link to='/new'> Add an author </Link></h5>\n\n            <table class=\"table table-bordered\">\n            <thead>\n                <tr>\n                <th scope=\"col\">First</th>\n                <th scope=\"col\">Last</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                {/* <td><AuthorList authors={authors} /></td> */}\n                <td>\n\n                {props.products.map((value, idx)=>{\n                return <h4 className=\"productTitle\" key={idx}> \n                    {/* <Link to=\"/products/:id\"> {product.title} </Link> */}\n                    <Link to={`/${value._id}`}> {value.title} </Link>\n\n\n                    </h4>\n            })}\n                    \n                </td>\n                <td>\n                    <button type=\"button\" class=\"btn btn-outline-success\">Success</button>\n                    {/* EDIT can be Link??\n                    <Link to={`/${value._id}/edit`}>\n                     <span>Edit</span>\n                    </Link>  */}\n                    <button type=\"button\" class=\"btn btn-outline-warning\">Danger</button>\n                </td>\n                </tr>\n                <tr>\n                <td>Cheryl Strayed</td>\n                <td>\n                    <button type=\"button\" class=\"btn btn-outline-success\">Success</button>\n                    <button type=\"button\" class=\"btn btn-outline-warning\">Danger</button>\n                    </td>\n                </tr>\n            </tbody>\n            </table>\n\n        </div>\n    )\n    }\n// }\n"]},"metadata":{},"sourceType":"module"}