{"ast":null,"code":"var _jsxFileName = \"/Users/sujungchoi/Desktop/Coding/projects/crochet/wip/client/src/views/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from '@reach/router';\nimport axios from 'axios';\nimport { Button } from 'semantic-ui-react'; // eslint-disable-next-line\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [projects, setProjects] = useState([]); // const [names, setNames] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/projects\") // .then(res=>setProducts(res.data.products)) if res.json({products: allProducts}) instead of getting it as an array from controller\n    .then(res => {\n      setProjects(res.data);\n    }).catch(err => console.log(\"Error: \", err));\n  }, []);\n\n  const deleteProject = projectId => {\n    axios.delete('http://localhost:8000/api/projects/' + projectId).then(res => {\n      setProjects(projects.filter(auth => auth._id !== projectId));\n    }).catch(err => console.log(\"Error: \", err));\n  }; ////// CHECKBOX ///////\n\n\n  const updateProject = (changedProject, id) => {\n    setProjects(projects.map(project => project._id === id ? changedProject : project));\n  };\n\n  const updateAPI = (data, id) => {\n    axios.put(`http://localhost:8000/api/projects/${id}`, data).then(res => {\n      console.log(res.data);\n      updateProject(res.data, id);\n    }).catch(err => console.log(err.response));\n  };\n\n  const checkBoxHandler = (completed, id) => {\n    updateAPI({\n      completed: completed\n    }, id);\n  }; ////////////////////////////////////\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Work in Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      basic: true,\n      color: \"blue\",\n      children: \"BUTTON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/new\",\n        children: \" Add an project! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"We have quotes by:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"firstColumn\",\n            scope: \"col\",\n            children: \"project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"secondColumn\",\n            scope: \"col\",\n            children: \"Options available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: projects.map((value, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"projectName\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/detail/${value._id}`,\n                children: value.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 32\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-outline-success\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/edit/${value._id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      \"color\": \"green\"\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  deleteProject(value._id);\n                },\n                type: \"button\",\n                className: \"btn btn-outline-warning\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: value.completed,\n                onChange: e => checkBoxHandler(e.target.checked, value._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}, \"DQmjVCNMsN1pVNUUrkMgoKLx0mo=\");","map":{"version":3,"sources":["/Users/sujungchoi/Desktop/Coding/projects/crochet/wip/client/src/views/Main.jsx"],"names":["React","useEffect","useState","Link","axios","Button","projects","setProjects","get","then","res","data","catch","err","console","log","deleteProject","projectId","delete","filter","auth","_id","updateProject","changedProject","id","map","project","updateAPI","put","response","checkBoxHandler","completed","value","idx","name","e","target","checked"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link } from '@reach/router'\nimport axios from 'axios';\nimport {Button} from 'semantic-ui-react';\n\n// eslint-disable-next-line\nexport default () => {\n    const [ projects, setProjects ] = useState([]);\n    // const [names, setNames] = useState([]);\n\n    useEffect(()=>{\n        axios.get(\"http://localhost:8000/api/projects\")\n            // .then(res=>setProducts(res.data.products)) if res.json({products: allProducts}) instead of getting it as an array from controller\n            .then(res=>{\n                setProjects(res.data)\n            })  \n            .catch(err=>console.log(\"Error: \", err))     \n    }, [])\n\n    const deleteProject = (projectId) => {\n        axios.delete('http://localhost:8000/api/projects/' + projectId)\n            .then(res => {\n                setProjects(projects.filter(auth => auth._id !== projectId));\n            })\n            .catch(err=>console.log(\"Error: \", err))     \n    }\n\n    ////// CHECKBOX ///////\n    const updateProject = (changedProject, id) => {\n        setProjects(projects.map(project => ( project._id === id ? changedProject : project)\n        ));\n      }\n\n    const updateAPI = (data, id) => {\n        axios.put(`http://localhost:8000/api/projects/${id}`, data)\n        .then(res => {\n            console.log(res.data)\n            updateProject(res.data, id);\n        })\n        .catch(err=>console.log(err.response));\n    }\n    \n    const checkBoxHandler = (completed, id) => {\n        updateAPI({completed: completed}, id);\n        }\n    ////////////////////////////////////\n\n    return (\n\n        <div className=\"mainPage\">\n            {/* <Nav /> */}\n            <h1>Work in Progress</h1>\n            <Button basic color='blue'>BUTTON</Button>\n            <h4><Link to='/new'> Add an project! </Link></h4>\n            <h5>We have quotes by:</h5>\n\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                    <th className=\"firstColumn\" scope=\"col\">project</th>\n                    <th className=\"secondColumn\" scope=\"col\">Options available</th>\n                    </tr>\n                </thead>\n                <tbody>\n\n                    {projects.map((value, idx)=>{\n                    return <tr key={idx}>\n                            <td className=\"projectName\" key={idx}> \n                               <Link to={`/detail/${value._id}` }>{value.name}</Link>\n                            </td>\n                            <td>\n                                <button type=\"button\" className=\"btn btn-outline-success\">\n                                <Link to={`/edit/${value._id}`}>\n                                <span style={{\"color\": \"green\"}}>Edit</span>\n                                </Link> \n\n                                </button>\n                                \n                                <button onClick={(e)=>{deleteProject(value._id)}} \n                                type=\"button\" className=\"btn btn-outline-warning\">Delete</button>\n\n                                <input \n                                type=\"checkbox\" \n                                checked={value.completed}\n                                onChange={e=>checkBoxHandler(e.target.checked, value._id)}>\n\n                                </input>\n                            </td>\n                        </tr>\n                    })}\n\n                </tbody>\n            </table>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}