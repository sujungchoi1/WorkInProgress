{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sujungchoi/Desktop/\\uD83D\\uDC69\\u200D\\uD83D\\uDCBBCodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from '@reach/router';\nimport axios from 'axios'; // eslint-disable-next-line\n\nexport default _s(() => {\n  _s();\n\n  const [authors, setAuthors] = useState([]);\n  const [names, setNames] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8001/api/authors\") // .then(res=>setProducts(res.data.products)) if res.json({products: allProducts}) instead of getting it as an array from controller\n    .then(res => {\n      setAuthors(res.data); // how to alphabetize the value of an object in an array?\n      // setAuthors([...authors].sort())\n      // authors.sort((a, b) => a.localeCompare(b))\n      // map.sort(authors)?\n    }).catch(err => console.log(\"Error: \", err));\n  }, []);\n\n  const deleteAuthor = authorId => {\n    axios.delete('http://localhost:8001/api/authors/' + authorId).then(res => {\n      setAuthors(authors.filter(auth => auth._id !== authorId));\n    }).catch(err => console.log(\"Error: \", err));\n  }; // for the checkbox\n  // const updateAuthor = (changedAuthor, id) => {\n  //     setAuthors(authors.map(author => {\n  //       if(author._id === id){\n  //         return changedAuthor;\n  //       }\n  //       return author;\n  //     }));\n  //   }\n\n\n  const updateAPI = (data, id) => {\n    axios.put(`http://localhost:8001/api/authors/edit/${id}`, data).then(res => {\n      console.log(res.data); // updateAuthor(res.data, id);\n    }).catch(err => {\n      console.log(err.response);\n    }); // }\n    // const checkBoxHandler = (completed, id) => {\n    //     updateAPI({completed: completed}, id);\n    //     }\n\n    const checkBoxHandler = (completed, id) => {\n      // changing display data\n      const changedAuthors = { ...authors\n      };\n      changedAuthors.completed = completed;\n      setAuthors(changedAuthors);\n      updateAPI({\n        completed: completed\n      }, id);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Favorite Authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/new\",\n          children: \" Add an author! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"We have quotes by:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"firstColumn\",\n              scope: \"col\",\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"secondColumn\",\n              scope: \"col\",\n              children: \"Options available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: authors.map((value, idx) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"authorName\",\n                children: value.name\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-outline-success\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/edit/${value._id}`,\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        \"color\": \"green\"\n                      },\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    deleteAuthor(value._id);\n                  },\n                  type: \"button\",\n                  className: \"btn btn-outline-warning\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: value.completed,\n                  onChange: e => checkBoxHandler(e.target.checked, value._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 29\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 28\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this);\n  };\n}, \"s1ZkqDVowedeZPo68YUyHJVJv5s=\");","map":{"version":3,"sources":["/Users/sujungchoi/Desktop/üë©‚ÄçüíªCodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Main.jsx"],"names":["React","useEffect","useState","Link","axios","authors","setAuthors","names","setNames","get","then","res","data","catch","err","console","log","deleteAuthor","authorId","delete","filter","auth","_id","updateAPI","id","put","response","checkBoxHandler","completed","changedAuthors","map","value","idx","name","e","target","checked"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link } from '@reach/router'\nimport axios from 'axios';\n\n// eslint-disable-next-line\nexport default () => {\n    const [ authors, setAuthors ] = useState([]);\n    const [names, setNames] = useState([]);\n\n    useEffect(()=>{\n        axios.get(\"http://localhost:8001/api/authors\")\n            // .then(res=>setProducts(res.data.products)) if res.json({products: allProducts}) instead of getting it as an array from controller\n            .then(res=>{\n                setAuthors(res.data)\n                // how to alphabetize the value of an object in an array?\n                // setAuthors([...authors].sort())\n                // authors.sort((a, b) => a.localeCompare(b))\n                // map.sort(authors)?\n\n            })  \n            .catch(err=>console.log(\"Error: \", err))     \n    }, [])\n\n    const deleteAuthor = (authorId) => {\n        axios.delete('http://localhost:8001/api/authors/' + authorId)\n            .then(res => {\n                setAuthors(authors.filter(auth => auth._id !== authorId));\n            })\n            .catch(err=>console.log(\"Error: \", err))     \n    }\n\n    // for the checkbox\n    // const updateAuthor = (changedAuthor, id) => {\n    //     setAuthors(authors.map(author => {\n    //       if(author._id === id){\n    //         return changedAuthor;\n    //       }\n    //       return author;\n    //     }));\n    //   }\n\n    const updateAPI = (data, id) => {\n        axios.put(`http://localhost:8001/api/authors/edit/${id}`, data)\n        .then(res => {\n            console.log(res.data)\n            // updateAuthor(res.data, id);\n        })\n        .catch(err=>{ console.log(err.response)\n        });\n\n    // }\n    \n    // const checkBoxHandler = (completed, id) => {\n    //     updateAPI({completed: completed}, id);\n    //     }\n    \n    const checkBoxHandler = (completed, id) => {\n        // changing display data\n        const changedAuthors = {...authors};\n        changedAuthors.completed = completed;\n        setAuthors(changedAuthors);\n\n        updateAPI({completed: completed}, id);\n    }\n\n\n    return (\n\n        <div className=\"mainPage\">\n            <h1>Favorite Authors</h1>\n\n            <h4><Link to='/new'> Add an author! </Link></h4>\n            <h5>We have quotes by:</h5>\n\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                    <th className=\"firstColumn\" scope=\"col\">Author</th>\n                    <th className=\"secondColumn\" scope=\"col\">Options available</th>\n                    </tr>\n                </thead>\n                <tbody>\n\n                    {authors.map((value, idx)=>{\n                    return <tr key={idx}>\n                            <td className=\"authorName\" key={idx}> \n                                {value.name}\n                            </td>\n                            <td>\n                                <button type=\"button\" className=\"btn btn-outline-success\">\n                                <Link to={`/edit/${value._id}`}>\n                                <span style={{\"color\": \"green\"}}>Edit</span>\n                                </Link> \n\n                                </button>\n                                \n                                <button onClick={(e)=>{deleteAuthor(value._id)}} \n                                type=\"button\" className=\"btn btn-outline-warning\">Delete</button>\n\n                                <input \n                                type=\"checkbox\" \n                                checked={value.completed}\n                                onChange={e=>checkBoxHandler(e.target.checked, value._id)}>\n\n                                </input>\n                            </td>\n                        </tr>\n                    })}\n\n                </tbody>\n            </table>\n\n        </div>\n    )\n    }\n}"]},"metadata":{},"sourceType":"module"}