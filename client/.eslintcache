[{"/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/index.js":"1","/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/App.js":"2","/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/reportWebVitals.js":"3","/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Main.jsx":"4","/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Update.jsx":"5","/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/components/AuthorForm.jsx":"6","/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Create.jsx":"7","/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Error.jsx":"8","/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Detail.jsx":"9"},{"size":500,"mtime":1611175994552,"results":"10","hashOfConfig":"11"},{"size":614,"mtime":1611302544063,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611175994554,"results":"13","hashOfConfig":"11"},{"size":3341,"mtime":1611302544063,"results":"14","hashOfConfig":"11"},{"size":2237,"mtime":1611303285546,"results":"15","hashOfConfig":"11"},{"size":4301,"mtime":1611303798642,"results":"16","hashOfConfig":"11"},{"size":1145,"mtime":1611303948913,"results":"17","hashOfConfig":"11"},{"size":497,"mtime":1611265826992,"results":"18","hashOfConfig":"11"},{"size":1095,"mtime":1611303628881,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1eznbzb",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/index.js",[],["44","45"],"/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/App.js",[],"/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/reportWebVitals.js",[],"/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Main.jsx",["46","47"],"import React, { useEffect, useState } from 'react'\nimport { Link } from '@reach/router'\nimport axios from 'axios';\n\n// eslint-disable-next-line\nexport default () => {\n    const [ authors, setAuthors ] = useState([]);\n    const [names, setNames] = useState([]);\n\n    useEffect(()=>{\n        axios.get(\"http://localhost:8001/api/authors\")\n            // .then(res=>setProducts(res.data.products)) if res.json({products: allProducts}) instead of getting it as an array from controller\n            .then(res=>{\n                setAuthors(res.data)\n            })  \n            .catch(err=>console.log(\"Error: \", err))     \n    }, [])\n\n    const deleteAuthor = (authorId) => {\n        axios.delete('http://localhost:8001/api/authors/' + authorId)\n            .then(res => {\n                setAuthors(authors.filter(auth => auth._id !== authorId));\n            })\n            .catch(err=>console.log(\"Error: \", err))     \n    }\n\n    ////// CHECKBOX ///////\n    const updateAuthor = (changedAuthor, id) => {\n        setAuthors(authors.map(author => ( author._id === id ? changedAuthor : author)\n        ));\n      }\n\n    const updateAPI = (data, id) => {\n        axios.put(`http://localhost:8001/api/authors/edit/${id}`, data)\n        .then(res => {\n            console.log(res.data)\n            updateAuthor(res.data, id);\n        })\n        .catch(err=>console.log(err.response));\n    }\n    \n    const checkBoxHandler = (completed, id) => {\n        updateAPI({completed: completed}, id);\n        }\n    ////////////////////////////////////\n\n    return (\n\n        <div className=\"mainPage\">\n            <h1>Favorite Authors</h1>\n\n            <h4><Link to='/new'> Add an author! </Link></h4>\n            <h5>We have quotes by:</h5>\n\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                    <th className=\"firstColumn\" scope=\"col\">Author</th>\n                    <th className=\"secondColumn\" scope=\"col\">Options available</th>\n                    </tr>\n                </thead>\n                <tbody>\n\n                    {authors.map((value, idx)=>{\n                    return <tr key={idx}>\n                            <td className=\"authorName\" key={idx}> \n                               <Link to={`/detail/${value._id}` }>{value.name}</Link>\n                            </td>\n                            <td>\n                                <button type=\"button\" className=\"btn btn-outline-success\">\n                                <Link to={`/edit/${value._id}`}>\n                                <span style={{\"color\": \"green\"}}>Edit</span>\n                                </Link> \n\n                                </button>\n                                \n                                <button onClick={(e)=>{deleteAuthor(value._id)}} \n                                type=\"button\" className=\"btn btn-outline-warning\">Delete</button>\n\n                                <input \n                                type=\"checkbox\" \n                                checked={value.completed}\n                                onChange={e=>checkBoxHandler(e.target.checked, value._id)}>\n\n                                </input>\n                            </td>\n                        </tr>\n                    })}\n\n                </tbody>\n            </table>\n\n        </div>\n    )\n}\n","/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Update.jsx",["48"],"import React, {useState, useEffect} from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport AuthorForm from '../components/AuthorForm';\n\n// eslint-disable-next-line\nexport default (props) => {\n\n    const [author, setAuthor] = useState(); \n    const [loaded, setLoaded] = useState(false);\n    const [errors, setErrors] = useState([]); \n\n    useEffect(() => {\n        axios.get(`http://localhost:8001/api/authors/${props.id}` )\n            .then(res => {\n                setAuthor(res.data);\n                setLoaded(true);\n            })\n            .catch(err=> {\n                console.log(err.response)\n                navigate(\"/error\")\n            })\n    }, [])\n\n    const updateAuthor = author => {\n        axios.put(`http://localhost:8001/api/authors/edit/${props.id}`, author)\n            .then(res => {\n                console.log(res)\n                // navigate to the main page after updating the form\n                navigate(\"/\")\n            })\n            // can I set two conditionals under .catch?? \n            // does it have to be under .put or can it be .get of edit page?\n            .catch(err=>{ console.log(err.response)\n                const errorResponse = err.response.data.errors; \n                const errorArr = []; \n                for (const key of Object.keys(errorResponse)) { \n                    errorArr.push(errorResponse[key].message)\n                }\n                setErrors(errorArr);\n            });\n    }\n\n  return (\n    <div className=\"updatePage\">\n\n{errors.map((err, index) => <p style={{\"color\": \"red\"}} key={index}> {err} </p>)}\n      <h1>Favorite Authors</h1>\n      <h5><Link to='/'> Home </Link></h5>\n      <h4 style={{\"color\": \"rgb(107, 106, 106)\"}}>Edit this author:</h4>\n\n        {loaded && (\n        <AuthorForm \n            onSubmitProp={updateAuthor}\n            initialName={author.name}\n            initialGenre={author.genre}\n            initialDesc={author.desc}\n        />)}\n      \n\n    </div>\n  );\n}\n\n\n// https://mongoosejs.com/docs/api.html#model_Model.update\n// [options.runValidators=false] «Boolean» if true, runs update validators on this command. Update validators validate the update operation against the model's schema.","/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/components/AuthorForm.jsx",["49","50"],"import React, { useState } from 'react'\nimport axios from 'axios';\nimport {navigate, Link} from '@reach/router'\n\n    // eslint-disable-next-line\nexport default (props) => {\n    const { initialName, initialGenre, initialDesc, onSubmitProp } = props;\n    //keep track of what is being typed via useState hook\n    const [name, setName] = useState(initialName); \n    const [desc, setDesc] = useState(initialDesc); \n    const [genre, setGenre] = useState(initialGenre); \n    // const [errors, setErrors] = useState([]);\n    //handler when the form is submitted\n    const onSubmitHandler = e => {\n        //prevent default behavior of the submit\n        e.preventDefault();\n        //make a post request to create a new person\n        onSubmitProp({name, genre, desc});\n        setName(\"\");\n    }\n\n    return (\n\n        <form className=\"formGroup\" onSubmit={onSubmitHandler}>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"name\">Name:</label>\n                <input type=\"text\" \n                onChange={(e) => setName(e.target.value)} \n                value={name} \n                className=\"form-control\" id=\"name\" placeholder=\"ex) Ernest Hemingway\" />\n\n                <select onChange={(e)=>setGenre(e.target.value)} name=\"select\" value={genre} >\n                    <option value=\"essay\" >essay</option>\n                    <option value=\"fiction\" >fiction</option>\n                    <option value=\"memoir\">memoir</option>\n                    <option value=\"mystery\">mystery</option>\n                    <option value=\"sci-fi\">sci-fi</option>\n                    <option value=\"poetry\">poetry</option>\n                    <option value=\"crime/detective\">crime/detective</option>\n                    <option value=\"can't define\">can't define</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label>Description:</label>\n                <textarea \n                onChange={(e) => setDesc(e.target.value)}\n                rows=\"4\" cols=\"50\" className=\"form-control\" value={desc}></textarea>\n            </div>\n            <div>\n                <button className=\"btn btn-primary\"><Link style={{\"color\": \"white\"}} to='/'> Cancel </Link></button>\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </div>\n        </form>\n\n    )\n}\n\n// backup\n// import React, { useState } from 'react'\n// import axios from 'axios';\n// import {navigate, Link} from '@reach/router'\n\n//     // eslint-disable-next-line\n// export default () => {\n//     //keep track of what is being typed via useState hook\n//     const [name, setName] = useState(\"\"); \n//     const [errors, setErrors] = useState([]);\n//     //handler when the form is submitted\n//     const onSubmitHandler = e => {\n//         //prevent default behavior of the submit\n//         e.preventDefault();\n//         //make a post request to create a new person\n//         axios.post('http://localhost:8001/api/authors/new', {name})\n//             .then(res=> {\n//                 console.log(res)\n//                 navigate(\"/\")\n//             })\n//             .catch(err=>{ console.log(err)\n//                 const errorResponse = err.response.data.errors; \n//                 const errorArr = []; \n//                 for (const key of Object.keys(errorResponse)) { \n//                     errorArr.push(errorResponse[key].message)\n//                 }\n//                 setErrors(errorArr);\n//             });\n//     }\n\n//     return (\n\n//         <form className=\"formGroup\" onSubmit={onSubmitHandler}>\n\n//             {errors.map((err, index) => <p style={{\"color\": \"red\"}} key={index}> {err} </p>)}\n\n//             <div className=\"form-group\">\n//                 <label HtmlFor=\"name\">Name:</label>\n//                 <input type=\"text\" \n//                 onChange={(e) => setName(e.target.value)} \n//                 value={name} \n//                 className=\"form-control\" id=\"name\" placeholder=\"ex) Ernest Hemingway\" />\n//             </div>\n//             <div>\n//                 <button class=\"btn btn-primary\"><Link style={{\"color\": \"white\"}} to='/'> Cancel </Link></button>\n//                 <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n//             </div>\n//         </form>\n\n//     )\n// }\n","/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Create.jsx",["51","52"],"import React, {useState} from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport AuthorForm from '../components/AuthorForm';\n\n// eslint-disable-next-line\nexport default () => {\n  const [authors, setAuthors] = useState([]);\n  const [errors, setErrors] = useState([]); \n\n  const createAuthor = (author) => {\n    axios.post('http://localhost:8001/api/authors/new', author)\n    .then(res=> {\n        console.log(res)\n        navigate(\"/\")\n    })\n    .catch(err=>{ console.log(err)\n      const errorResponse = err.response.data.errors; \n      const errorArr = []; \n      for (const key of Object.keys(errorResponse)) { \n          errorArr.push(errorResponse[key].message)\n      }\n      setErrors(errorArr);\n  });\n}\n\n\n  return (\n    <div className=\"createPage\">\n      {errors.map((err, index) => <p style={{\"color\": \"red\"}} key={index}> {err} </p>)}\n      <h1>Favorite Authors</h1>\n      <h5><Link to='/'> Home </Link></h5>\n      <h4 style={{\"color\": \"rgb(107, 106, 106)\"}}>Add a new author:</h4>\n\n      <AuthorForm onSubmitProp={createAuthor} initialName=\"\" initialGenre=\"\" initialDesc=\"\" />\n    </div>\n  );\n}\n","/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Error.jsx",[],"/Users/sujungchoi/Desktop/👩‍💻CodingDojo/MERN/Full_Stack_MERN/authors/client/src/views/Detail.jsx",["53","54"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport { Link, navigate } from '@reach/router';\n\n// eslint-disable-next-line\nexport default (props) => {\n    // for GET request\n    const [author, setAuthor] = useState();\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        axios.get(`http://localhost:8001/api/authors/${props.id}`)\n            .then(res => {\n                setAuthor(res.data)\n                setLoaded(true);\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n\n    return (\n        <div>\n            {loaded && (\n            <div>\n            <h1 style={{\"marginBottom\":\"20px\"}}>{author.name}</h1>\n            <h4>Genre: {author.genre}</h4>\n            <h4>Notes: {author.desc}</h4>\n            {/* <h4>Description: {author.description}</h4> */}\n            <div className=\"edit_delete\">\n                <h5><Link to={\"/edit/\" + author._id }>EDIT</Link></h5>\n\n            </div>\n\n            <h5><Link to='/'> Back to Main Page </Link></h5>\n            </div>\n            )}\n        </div>\n    )\n}\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":8,"column":12,"nodeType":"61","messageId":"62","endLine":8,"endColumn":17},{"ruleId":"59","severity":1,"message":"63","line":8,"column":19,"nodeType":"61","messageId":"62","endLine":8,"endColumn":27},{"ruleId":"64","severity":1,"message":"65","line":23,"column":8,"nodeType":"66","endLine":23,"endColumn":10,"suggestions":"67"},{"ruleId":"59","severity":1,"message":"68","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":13},{"ruleId":"59","severity":1,"message":"69","line":3,"column":9,"nodeType":"61","messageId":"62","endLine":3,"endColumn":17},{"ruleId":"59","severity":1,"message":"70","line":8,"column":10,"nodeType":"61","messageId":"62","endLine":8,"endColumn":17},{"ruleId":"59","severity":1,"message":"71","line":8,"column":19,"nodeType":"61","messageId":"62","endLine":8,"endColumn":29},{"ruleId":"59","severity":1,"message":"69","line":3,"column":16,"nodeType":"61","messageId":"62","endLine":3,"endColumn":24},{"ruleId":"64","severity":1,"message":"65","line":18,"column":8,"nodeType":"66","endLine":18,"endColumn":10,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'names' is assigned a value but never used.","Identifier","unusedVar","'setNames' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.","ArrayExpression",["75"],"'axios' is defined but never used.","'navigate' is defined but never used.","'authors' is assigned a value but never used.","'setAuthors' is assigned a value but never used.",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"77","fix":"79"},"Update the dependencies array to be: [props.id]",{"range":"80","text":"81"},{"range":"82","text":"81"},[704,706],"[props.id]",[552,554]]